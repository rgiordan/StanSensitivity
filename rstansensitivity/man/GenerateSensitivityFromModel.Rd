% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stan_sensitivity_lib.R
\name{GenerateSensitivityFromModel}
\alias{GenerateSensitivityFromModel}
\title{Generate stan models for sensitivity calculations from a model with a
hyperparameters block.}
\usage{
GenerateSensitivityFromModel(base_model_name,
  python_script = system.file("generate_models.py", package =
  "rstansensitivity"))
}
\arguments{
\item{base_model_name}{The name of the model with a hyperparameters block,
including the .stan suffix.}

\item{python_script}{The location of the generate_models.py from this
repository.}
}
\value{
The \code{model_name} which can be passed as an argument into other
functions in this library.  The function also generates the sensitivity model
files in the same location as the original base model.
}
\description{
Generate stan models for sensitivity calculations from a model with a
hyperparameters block.
}
\examples{
library(devtools)
library(rstan)
rstan_options(auto_write=TRUE)

model_filename <- package_file("inst/examples/my_model.stan")
stan_data_filename <- package_file("inst/examples/my_model.data.R")

# Parse the hyperparameters block of `my_model.stan` into models that
# Stan can actuall compile.
model_name <- GenerateSensitivityFromModel(model_filename)
model <- stan_model(GetSamplingModelFilename(model_name))

# Get the original samples.
stan_data <- LoadStanData(stan_data_filename)
sampling_result <- sampling(model, data=stan_data, chains=1, iter=1000)

# Get the sensitivity result.
stan_sensitivity_list <- GetStanSensitivityModel(model_name, stan_data)
sens_result <- GetStanSensitivityFromModelFit(
    sampling_result, stan_sensitivity_list)

print(sens_result$sens_mat)
print(sens_result$sens_mat_normalized)
}
